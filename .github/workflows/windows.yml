name: Windows

on:
  push:
    paths:
      - 'R3nzSkin/*'
  pull_request:
    paths:
      - 'R3nzSkin/*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
        configuration: [ChinaServer]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          path: R3nzSkin

      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Build
        working-directory: R3nzSkin
        run: msbuild R3nzSkin.vcxproj /p:Platform=x64 /p:Configuration=${{ matrix.configuration }}

      - name: Upload File
        uses: actions/upload-artifact@v2
        with:
          name: windows
          path: R3nzSkin/Release/ChinaServer/R3nzSkin.dll

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: windows

      - name: Generate Random Version Number
        id: random_version
        run: echo "::set-output name=random_version::$(openssl rand -hex 4)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.random_version.outputs.random_version }}
          release_name: Release ${{ steps.random_version.outputs.random_version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows/R3nzSkin.dll
          asset_name: R3nzSkin.dll
          asset_content_type: application/octet-stream
