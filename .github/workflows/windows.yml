name: Windows

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
        configuration: [ChinaServer]
    steps:
      - uses: actions/checkout@v2
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      - name: Build
        shell: cmd
        run: msbuild R3nzSkin/R3nzSkin.vcxproj /p:Platform=x64 /p:Configuration=${{ matrix.configuration }}
      - name: Upload File
        uses: actions/upload-artifact@v2
        with:
          name: windows
          path: D:\a\R3nzSkin\R3nzSkin\R3nzSkin\Release\ChinaServer\R3nzSkin.dll

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: windows

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get Current Version
        id: get_version
        run: echo "::set-output name=version::$(cat version.txt)"

      - name: Bump Version
        id: bump_version
        run: echo "::set-output name=next_version::$(awk -F. -v OFS=. '{++$NF}1' version.txt)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump_version.outputs.next_version }}
          release_name: Release v${{ steps.bump_version.outputs.next_version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./R3nzSkin.dll
          asset_name: R3nzSkin.dll
          asset_content_type: application/octet-stream
