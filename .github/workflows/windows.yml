name: Windows

on:
  push:
    branches:
      - main
    paths:
      - 'README.md'  # 限制只有在根目录下的 README.md 文件发生变化时触发工作流程
  pull_request:
    types: [opened, synchronize, reopened, closed, pull_request_target]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
        configuration: [ChinaServer]
    steps:
    - uses: actions/checkout@v2
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Build
      id: build
      shell: cmd
      run: msbuild R3nzSkin/R3nzSkin.vcxproj /p:Platform=x64 /p:Configuration=${{ matrix.configuration }}
    - name: Upload File
      uses: actions/upload-artifact@v2
      with:
        name: windows
        path: D:\a\R3nzSkin\R3nzSkin\R3nzSkin\Release\ChinaServer\R3nzSkin.dll
      # 提供生成的 R3nzSkin.dll 文件的路径作为输出
      # 这样后续的发布步骤可以使用这个路径来上传资产
      # ${{ steps.upload_file.outputs.artifact_path }} 表示提取上一步输出的路径
      id: upload_file
      env:
        ARTIFACT_PATH: D:\a\R3nzSkin\R3nzSkin\R3nzSkin\Release\ChinaServer\R3nzSkin.dll
      run: echo "artifact_path=${ARTIFACT_PATH}" >> $GITHUB_ENV

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && contains(github.event.pull_request.head.sha, github.event.pull_request.base.sha) == false) && contains(github.event_path, 'README.md') }}
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: windows

    - name: 获取最新发布标签
      id: get_latest_tag
      run: echo "::set-output name=tag::$(git describe --tags $(git rev-list --tags --max-count=1))"

    - name: 生成随机版本号
      id: random_version
      run: echo "::set-output name=random_version::$(head /dev/urandom | LC_CTYPE=C tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)"

    - name: 创建发布
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.random_version.outputs.random_version }}
        release_name: Release ${{ steps.random_version.outputs.random_version }}
        draft: false
        prerelease: false

    - name: 上传发布资产
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        # 使用 build 步骤输出的路径作为上传的文件路径
        asset_path: ${{ steps.upload_file.outputs.artifact_path }}
        asset_name: R3nzSkin.dll
        asset_content_type: application/octet-stream
